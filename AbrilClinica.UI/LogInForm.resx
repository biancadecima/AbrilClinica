<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="lbl_password.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbx_show.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Qzj3/2XApFuFk2e2AAAAAElFTkSuQmCC
</value>
  </data>
</root>